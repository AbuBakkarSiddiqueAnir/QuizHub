"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var async = require('async');
var mongoose = require('mongoose');
var plugin = require('../').plugin;
var connection;
var should = require('chai').should();
var options = { field: 'serial', prefix: "Invoice", separator: "-", digits: 5 };
before(function (done) {
    connection = mongoose.createConnection('mongodb://127.0.0.1/mongoose-serial-without-date', { useNewUrlParser: true, useUnifiedTopology: true });
    connection.on('error', console.error.bind(console));
    connection.once('open', function () {
        done();
    });
});
after(function (done) {
    connection.db.dropDatabase(function (err) {
        if (err)
            return done(err);
        connection.close(done);
    });
});
describe('Mongoose-serial : Without dates', function () {
    it('should save the Invoices', function (done) {
        // create invoice model
        var invoiceSchema = new mongoose.Schema({
            serial: String,
            ht: Number,
            ttc: Number,
        });
        invoiceSchema.plugin(plugin, options);
        var Invoice = connection.model('Invoice', invoiceSchema);
        var invoice1 = new Invoice({ ht: 10000, ttc: 10010 });
        var invoice2 = new Invoice({ ht: 12000, ttc: 12010 });
        var invoice3 = new Invoice({ ht: 13000, ttc: 12010 });
        var invoice4 = new Invoice({ ht: 14000, ttc: 12010 });
        // insert some invoices
        async.series({
            invoice1: function (cb) {
                invoice1.save(cb);
            },
            invoice2: function (cb) {
                invoice2.save(cb);
            },
            invoice3: function (cb) {
                invoice3.save(cb);
            },
            invoice4: function (cb) {
                invoice4.save(cb);
            }
        }, assert);
        // assert
        function assert(err, results) {
            should.not.exist(err);
            results.invoice1.should.have.property('ht', 10000);
            results.invoice2.should.have.property('ht', 12000);
            done();
        }
    });
});
